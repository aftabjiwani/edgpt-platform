# EdGPT Platform - Nginx Configuration for All 6 Domains
# Place this file in /etc/nginx/sites-available/edgpt-domains
# Enable with: sudo ln -s /etc/nginx/sites-available/edgpt-domains /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name edgpt.ai www.edgpt.ai;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name edgpt.ai www.edgpt.ai;
    
    # SSL Configuration (update paths as needed)
    ssl_certificate /etc/letsencrypt/live/edgpt.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/edgpt.ai/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Proxy to Flask app
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Static files (if needed)
    location /static/ {
        alias /var/www/edgpt/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# GPTSites.ai
server {
    listen 80;
    server_name gptsites.ai www.gptsites.ai;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name gptsites.ai www.gptsites.ai;
    
    ssl_certificate /etc/letsencrypt/live/gptsites.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gptsites.ai/privkey.pem;
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /static/ {
        alias /var/www/edgpt/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# LawFirmGPT.ai
server {
    listen 80;
    server_name lawfirmgpt.ai www.lawfirmgpt.ai;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name lawfirmgpt.ai www.lawfirmgpt.ai;
    
    ssl_certificate /etc/letsencrypt/live/lawfirmgpt.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lawfirmgpt.ai/privkey.pem;
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /static/ {
        alias /var/www/edgpt/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# CPAFirm.ai
server {
    listen 80;
    server_name cpafirm.ai www.cpafirm.ai;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name cpafirm.ai www.cpafirm.ai;
    
    ssl_certificate /etc/letsencrypt/live/cpafirm.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cpafirm.ai/privkey.pem;
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /static/ {
        alias /var/www/edgpt/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# TaxPrepGPT.ai
server {
    listen 80;
    server_name taxprepgpt.ai www.taxprepgpt.ai;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name taxprepgpt.ai www.taxprepgpt.ai;
    
    ssl_certificate /etc/letsencrypt/live/taxprepgpt.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/taxprepgpt.ai/privkey.pem;
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /static/ {
        alias /var/www/edgpt/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# BusinessBrokerGPT.ai
server {
    listen 80;
    server_name businessbrokergpt.ai www.businessbrokergpt.ai;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name businessbrokergpt.ai www.businessbrokergpt.ai;
    
    ssl_certificate /etc/letsencrypt/live/businessbrokergpt.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/businessbrokergpt.ai/privkey.pem;
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /static/ {
        alias /var/www/edgpt/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

